# Cheat sheet for config (git) processes:
---------------------------------------------------------------------------
https://github.com/yoda-bjw/dotfiles.git
	Username: yoda-bjw
	Password: (web browser only): <secret>
	yodatoken: (CLI) <secret>
---------------------------------------------------------------------------
Create a new repository on the command line (assumes using a bare git repository, alias=config).

	$ echo "# dotfiles" >> README.md
	$ config init
	$ config add README.md
	$ config commit -m "first commit"
	$ config branch -M master
	$ config remote add origin https://github.com/yoda-bjw/dotfiles.git
	$ config push -u origin master
---------------------------------------------------------------------------
Push an existing repository from the command line (assumes using a bare git repository, alias=config).

	$ config remote add origin https://github.com/yoda-bjw/dotfiles.git
	$ config branch -M master
	$ config push -u origin master
		Username: yoda-bjw
		Password: <secret>
---------------------------------------------------------------------------
Everyday repository-management:

	$ config status # display status of tracked files.
	$ config add <filename>	# Adds file to local repository
	$ config commit -m "Commit comment" # commits added but not yet commited files to local repository.
	$ config push https://github.com/yoda-bjw/dotfiles.git
		# Must supply github (remote repository) Username and Token
---------------------------------------------------------------------------
Config (git) aliases in .bash_aliases:
		alias addup='config add -u' # <filename1 filename2> <*.txt>
        # alias addall='config add .' # Adds entire directory. Not for bare repo!!
        alias branch='config branch'
        alias checkout='config checkout'
        alias clone='config clone'
        alias diff='config diff' # Shows unstaged changes.
        alias diffs='config diff --staged' # Shows staged changes.
        alias commit='config commit -m'
        alias fetch='config fetch'
        alias pull='config pull origin'
        alias push='config push origin'
        alias stat='config status'  # 'status' is protected name so using 'stat' instead
        alias tag='config tag'
        alias newtag='config tag -a'
--------------------------------------------------------------------------
Create a bare repository on a new machine <https://www.atlassian.com/git/tutorials/dotfiles>: 
	First, add this alias to .bashrc:
		alias config='/usr/bin/git --git-dir=$HOME/.cfg/ --work-tree=$HOME'
	Then:
	$ echo ".cfg" >> .gitignore
	$ git clone --bare <git-repo-url> $HOME/.cfg
	$ config='/usr/bin/git --git-dir=$HOME/.cfg/ --work-tree=$HOME'
	$ config checkout
	The step above might fail with a message like:
	error: The following untracked working tree files would be overwritten by checkout:
       .bashrc
       .gitignore
       Please move or remove them before you can switch branches.
       Aborting
       This is because your $HOME folder might already have some stock configuration files which would be overwritten by Git. The solution is simple: back up the files if you care about them, remove them if you don't care. Then, rerun $ config checkout
       $ config config --local status.showUntrackedFiles no

	
